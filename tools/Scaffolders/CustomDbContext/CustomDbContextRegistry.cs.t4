<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output Extension="cs" #>
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Web;
using EF.CodeFirst.Common.Db;
using Microsoft.Practices.ServiceLocation;

namespace <#= Model.DbContextNamespace #>
{
    public class <#= Model.DbRegistryName #> : IDbContextRegistry
    {
        private <#= Model.DbContextType #> _dbContext;
        private bool _disposed;

        public DbContext CurrentContext
        {
            get
            {
                return _dbContext
                    ?? (_dbContext = (<#= Model.DbContextType #>)ServiceLocator.Current.GetInstance<DbContext>());
            }
        }

        public void Dispose()
        {
            Dispose(true);

            GC.SuppressFinalize(this);
        }

        public virtual void Dispose(bool disposing)
        {
            if (disposing && !_disposed)
            {
                if (_dbContext != null) _dbContext.Dispose();

                _disposed = true;
            }
        }
    }
}